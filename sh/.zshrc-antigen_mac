# For OS X
source "$HOME/.antigen/antigen.zsh"

# Install antigen
# git clone https://github.com/zsh-users/antigen ~/.antigen

antigen use oh-my-zsh

# bundles from oh-my-zsh
# antigen bundle extract
antigen bundle git
antigen bundle virtualenvwrapper
antigen bundle virtualenv
# antigen bundle dirhistory
# antigen bundle history-substring-search
# antigen bundle history

antigen bundle zsh-users/zsh-completions src
antigen bundle zsh-users/zsh-syntax-highlighting
# antigen bundle tarruda/zsh-autosuggestions
# antigen bundle kennethreitz/autoenv
antigen bundle Tarrasch/zsh-autoenv

antigen-theme agnoster

setopt correct_all # Enable autocorrect suggestions
ENABLE_CORRECTION="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Autosuggestion color
# AUTOSUGGESTION_HIGHLIGHT_COLOR=fg159
# AUTOSUGGESTION_HIGHLIGHT_CURSOR=1
# AUTOSUGGESTION_HIGHLIGHT_COLOR="fg=159,bg=020"
# bindkey '^f' vi-forward-blank-word
# bindkey '^b' vi-backward-blank-word
# # Setup zsh-autosuggestions
# zle-line-init() {
#     zle autosuggest-start
# }
# zle -N zle-line-init
# COMPLETION_WAITING_DOTS="false"

# User configuration
# Set up PATH variable
# Need to install coreutils to have /opt/../gnubin for gnu version of ls and other utils.
# E.g. sudo port install coreutils or brew install coreutils
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH

# MacPorts Installer addition on 2011-12-06_at_22:00:03: adding an appropriate PATH variable for use with MacPorts.
export PATH=/opt/local/libexec/gnubin:/opt/local/bin:/opt/local/sbin:$PATH
export PATH=/opt/local/lib:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.

# Setting PATH for QT 4.7
export PATH=/Users/hongwei/QtSDK/Desktop/Qt/474/gcc/bin:$PATH

# Set up apache ant
export PATH=$PATH:/opt/apache-ant-1.9.4/bin
export ANT_HOME=/opt/apache-ant-1.9.4
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home

# Set up octave
export PATH=$PATH:/Applications/Octave.app/Contents/MacOS

# ---------- End set up PATH ---------- 

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Aliases
alias ll='ls -AlhF'
alias la='ls -aF'
# ls --option not available on OS X. Need to use Homebrew to install coreutils
alias ls='ls --color=tty -F --group-directories-first'
alias l=ls
alias lc='ls --color=tty -F --format=single-column --group-directories-first'
alias rm='rmtrash'
alias cp='cp -i'
alias mv='mv -i'
alias grep='grep --color=auto -nH'
alias vim='mvim -v'

# NOTE: PATH variable *MUST* be set before sourcing virtualenvwrapper.sh
# See http://virtualenvwrapper.readthedocs.org/en/latest/install.html
# NOTE: PATH variable must be set before sourcing virtualenvwrapper.sh
# See http://virtualenvwrapper.readthedocs.org/en/latest/install.html
# For virtualenv support
export VIRTUALENVWRAPPER_PYTHON=`which python`
export VIRTUALENVWRAPPER_VIRTUALENV=`which virtualenv`
export WORKON_HOME=$HOME/.virtualenvs
source /opt/local/bin/virtualenvwrapper.sh-2.7
export PIP_VIRTUALENV_BASE=$WORKON_HOME
# makes pip detect an active virtualenv and install to it
export PIP_RESPECT_VIRTUALENV=true

# Configure 256 colors if possible
case $TERM in
    xterm|screen|rxvt-unicode)
        TERM="${TERM}-256color" ;;
esac

# This adds [dd-mm-yy time] that updates to right prompt
# Use %p instead of %K for 12 hour time format
RPROMPT='[%D %D{%L:%M:%S %K}]'
# TMOUT=1
# TRAPALRM() {
#     zle reset-prompt
# }

export EDITOR="mvim -v"

# bind UP and DOWN arrow keys
# zmodload zsh/terminfo
# bindkey "$terminfo[kcuu1]" history-substring-search-up
# bindkey "$terminfo[kcud1]" history-substring-search-down

# Make prompt more user friendly when user entered wrong command.
# This replaces [ynae] with the expanded version of the words
# and color code the wrong and suggested command.
autoload -U colors && colors
export SPROMPT="Correct $fg_bold[red]%R$reset_color to $fg_bold[green]%r?$reset_color (Yes, No, Abort, Edit) "

# Extended file move
# See: http://www.mfasold.net/blog/2008/11/moving-or-renaming-multiple-files/
autoload -U zmv
alias mmv='noglob zmv -W'

# Don't add failed commands to history
zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }

antigen-apply
